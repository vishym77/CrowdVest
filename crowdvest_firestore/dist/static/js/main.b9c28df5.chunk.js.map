{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Notifications","notifications","classname","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b9c28df5.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={props.signOut}>Log Out</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}  \n        </NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n      \n      firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n      ).then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'LOGIN_ERROR', err });\n      });\n  \n    }\n  }\n  \n  export const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n      const firebase = getFirebase();\n  \n      firebase.auth().signOut().then(() => {\n        dispatch({ type: 'SIGNOUT_SUCCESS' })\n      });\n    }\n  }\n  \n  export const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props;\n  // console.log(auth);\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">CrowdVest</Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return{\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div classname=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item => {\n              return <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"note-date grey-text\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications\n","// This is a function that defines a ProjectList in a modular way\n\nimport React from 'react'\nimport moment from 'moment'\n\n\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className= \"card z-depth-0 project-summary\">\n      <div className= \"card-content grey-text text-darken-3\">\n        <span className= \"card-title\">{project.title}</span>\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p >\n        <p className = \"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\n// These hold Project Summary's defined under\n//'Project Summary'\n\n\nconst ProjectList = ({projects}) => {\n  return(\n    <div className= \"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to = {'/project/' + project.id}  key={project.id}>\n          <ProjectSummary project={project}/>\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList\n","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../projects/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component{\n  render(){\n\n    //console.log(this.props);\n\n    const { projects, auth, notifications } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n\n    //col s12 m6 means a small screen holds 12 and\n    //medium and up hold 6\n\n    return(\n      <div className= \"dashboard container\">\n        <div className= \"row\">\n          <div className= \"col s12 m6\">\n            <ProjectList projects={projects}/>\n          </div>\n          <div className= \"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n    \n  ])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\n//Video 7 creates ProjectDetails page\n// The Posted by Group owner box doesn't match, and this is a bug\n//This is probably a materialize issue\n//Highly possible that we can just delete this as it isn't needed\n//Group Name should probably be in bold\n\nconst ProjectDetails = (props) => {\n\n  //This pulls the Project Id from the url\n  //Later on it should tell us which group's details we are looking at\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to = '/signin' />\n  if (project) {\n    return(\n      <div className='container section project-details'>\n        <div className='card z-depth-0'>\n          <div className='card-content'>\n            <span className= \"card-title\">{ project.title }</span>\n            <p>{ project.content }</p>\n          </div>\n          <div className=\"card action grey lighten-3 grey-text\">\n            <div> Posted by {project.authorFirstName} {project.authorLastName}</div>\n            <div> {moment(project.createdAt.toDate()).calendar()}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n  else {\n    return (\n      <div className=\"container center\">\n        <p>Loading Group...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  //console.log(state)\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signIn(this.state)\n  }\n  render() {\n    const { authError, auth } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError,\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  }\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to='/' /> \n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth,\n    authError: state.auth.authError\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n  return {\n    signUp: (creds) => dispatch(signUp(creds))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)","import React, {Component} from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');  }\n\n\n  render(){\n    const { auth } = this.props;\n    if(!auth.uid) return <Redirect to = '/signin' />\n    return(\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n\n          <h5 className = \"grey-text text-darken-3\">Create a Group</h5>\n\n          <div className=\"input-field\">\n            <label htmlFor= \"title\">Group Name</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n          </div>\n\n          <div className=\"input-field\">\n          <textarea id=\"content\" className=\"materialize-textarea\"  onChange={this.handleChange}></textarea>\n            <label htmlFor= \"content\">Group Information</label>\n          </div>\n\n          <div className=\"input-field\">\n            <button className= \"btn pink lighten-1  z-depth-0\">Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    auth: state.firebase.auth\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirebase, getFirestore } ) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n\n\n        firestore.collection(\"projects\").add({\n            ...project,\n            authorFirstName: profile.firstName, \n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT_SUCCESS' });  \n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err});\n        })\n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route  } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\n//route exact path means that url.com/ takes us to dashboard\n// underneath this, it shows that url/project takes us to\n//ProjectDetails component\n\n\nclass App extends Component {\n  render() {\n  return (\n\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path ='/' component= {Dashboard} />\n          <Route path ='/project/:id' component= {ProjectDetails} />\n          <Route path ='/signin' component= {SignIn} />\n          <Route path ='/signup' component= {SignUp} />\n          <Route path ='/create' component= {CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n                console.log('login error');\n            return {\n                ...state, \n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    } \n\n};\nexport default authReducer;","const initState = {}\n/*\n    projects: [\n        {id: '1', title: 'Facebook', content: 'Join my group if ur cool'},\n        {id: '2', title: 'Google', content: 'Join my group if ur nerdy'},\n        {id: '3', title: 'Amazon', content: 'Join my group if u like big packages'}\n    ]\n}\n*/\n\n// in tutorial, called projectReducer\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT_SUCCESS':\n            console.log('create project success', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;    \n    }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase'\n\n// group = project\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer \n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCdR4il_KY8YyExnqiNW57Fmm5tl-qmJHo\",\n    authDomain: \"crowdvest-84514.firebaseapp.com\",\n    databaseURL: \"https://crowdvest-84514.firebaseio.com\",\n    projectId: \"crowdvest-84514\",\n    storageBucket: \"crowdvest-84514.appspot.com\",\n    messagingSenderId: \"975449803470\",\n    appId: \"1:975449803470:web:d796548a6c493d2e\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore().settings({ timestampsInSnapshots: true})\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n    compose(\n      applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n      reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n      reduxFirestore(fbConfig) // redux bindings for firestore\n    )\n  );\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n         \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n\n"],"sourceRoot":""}